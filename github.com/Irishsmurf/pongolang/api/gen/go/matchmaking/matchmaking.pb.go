// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: matchmaking/matchmaking.proto

package matchmaking_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum defining the possible states while waiting in the queue
type QueueUpdate_Status int32

const (
	QueueUpdate_STATUS_UNSPECIFIED QueueUpdate_Status = 0 // Default value, should not be used
	QueueUpdate_WAITING_FOR_PLAYER QueueUpdate_Status = 1 // Client is in the queue, waiting for an opponent
	QueueUpdate_MATCH_FOUND        QueueUpdate_Status = 2 // An opponent was found, details included
	QueueUpdate_QUEUE_TIMEOUT      QueueUpdate_Status = 3 // No match found within a time limit (optional)
	QueueUpdate_QUEUE_ERROR        QueueUpdate_Status = 4 // An internal error occurred
)

// Enum value maps for QueueUpdate_Status.
var (
	QueueUpdate_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "WAITING_FOR_PLAYER",
		2: "MATCH_FOUND",
		3: "QUEUE_TIMEOUT",
		4: "QUEUE_ERROR",
	}
	QueueUpdate_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"WAITING_FOR_PLAYER": 1,
		"MATCH_FOUND":        2,
		"QUEUE_TIMEOUT":      3,
		"QUEUE_ERROR":        4,
	}
)

func (x QueueUpdate_Status) Enum() *QueueUpdate_Status {
	p := new(QueueUpdate_Status)
	*p = x
	return p
}

func (x QueueUpdate_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueueUpdate_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_matchmaking_matchmaking_proto_enumTypes[0].Descriptor()
}

func (QueueUpdate_Status) Type() protoreflect.EnumType {
	return &file_matchmaking_matchmaking_proto_enumTypes[0]
}

func (x QueueUpdate_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueueUpdate_Status.Descriptor instead.
func (QueueUpdate_Status) EnumDescriptor() ([]byte, []int) {
	return file_matchmaking_matchmaking_proto_rawDescGZIP(), []int{0, 0}
}

// Status updates streamed back to the client after joining the queue
type QueueUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        QueueUpdate_Status     `protobuf:"varint,1,opt,name=status,proto3,enum=matchmaking.QueueUpdate_Status" json:"status,omitempty"` // Current status of the queue request
	Details       *MatchDetails          `protobuf:"bytes,2,opt,name=details,proto3,oneof" json:"details,omitempty"`                              // Included only when status is MATCH_FOUND
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`                                    // Optional informational message (e.g., "Waiting...", "Error details")
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueueUpdate) Reset() {
	*x = QueueUpdate{}
	mi := &file_matchmaking_matchmaking_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueUpdate) ProtoMessage() {}

func (x *QueueUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaking_matchmaking_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueUpdate.ProtoReflect.Descriptor instead.
func (*QueueUpdate) Descriptor() ([]byte, []int) {
	return file_matchmaking_matchmaking_proto_rawDescGZIP(), []int{0}
}

func (x *QueueUpdate) GetStatus() QueueUpdate_Status {
	if x != nil {
		return x.Status
	}
	return QueueUpdate_STATUS_UNSPECIFIED
}

func (x *QueueUpdate) GetDetails() *MatchDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *QueueUpdate) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Details of a found match
type MatchDetails struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	MatchId           string                 `protobuf:"bytes,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`                                 // Unique identifier for this specific match session
	Player1Id         string                 `protobuf:"bytes,2,opt,name=player1_id,json=player1Id,proto3" json:"player1_id,omitempty"`                           // ID of the first player
	Player2Id         string                 `protobuf:"bytes,3,opt,name=player2_id,json=player2Id,proto3" json:"player2_id,omitempty"`                           // ID of the second player
	GameServerAddress string                 `protobuf:"bytes,4,opt,name=game_server_address,json=gameServerAddress,proto3" json:"game_server_address,omitempty"` // Network address (host:port) of the GameServer assigned to this match
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MatchDetails) Reset() {
	*x = MatchDetails{}
	mi := &file_matchmaking_matchmaking_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchDetails) ProtoMessage() {}

func (x *MatchDetails) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaking_matchmaking_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchDetails.ProtoReflect.Descriptor instead.
func (*MatchDetails) Descriptor() ([]byte, []int) {
	return file_matchmaking_matchmaking_proto_rawDescGZIP(), []int{1}
}

func (x *MatchDetails) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *MatchDetails) GetPlayer1Id() string {
	if x != nil {
		return x.Player1Id
	}
	return ""
}

func (x *MatchDetails) GetPlayer2Id() string {
	if x != nil {
		return x.Player2Id
	}
	return ""
}

func (x *MatchDetails) GetGameServerAddress() string {
	if x != nil {
		return x.GameServerAddress
	}
	return ""
}

// Request message for JoinQueue RPC
type JoinQueueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"` // ID of the player joining the queue
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinQueueRequest) Reset() {
	*x = JoinQueueRequest{}
	mi := &file_matchmaking_matchmaking_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinQueueRequest) ProtoMessage() {}

func (x *JoinQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaking_matchmaking_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinQueueRequest.ProtoReflect.Descriptor instead.
func (*JoinQueueRequest) Descriptor() ([]byte, []int) {
	return file_matchmaking_matchmaking_proto_rawDescGZIP(), []int{2}
}

func (x *JoinQueueRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

// Request message for LeaveQueue RPC
type LeaveQueueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"` // ID of the player leaving the queue
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveQueueRequest) Reset() {
	*x = LeaveQueueRequest{}
	mi := &file_matchmaking_matchmaking_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveQueueRequest) ProtoMessage() {}

func (x *LeaveQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaking_matchmaking_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveQueueRequest.ProtoReflect.Descriptor instead.
func (*LeaveQueueRequest) Descriptor() ([]byte, []int) {
	return file_matchmaking_matchmaking_proto_rawDescGZIP(), []int{3}
}

func (x *LeaveQueueRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

var File_matchmaking_matchmaking_proto protoreflect.FileDescriptor

const file_matchmaking_matchmaking_proto_rawDesc = "" +
	"\n" +
	"\x1dmatchmaking/matchmaking.proto\x12\vmatchmaking\x1a\x1bgoogle/protobuf/empty.proto\"\x95\x02\n" +
	"\vQueueUpdate\x127\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1f.matchmaking.QueueUpdate.StatusR\x06status\x128\n" +
	"\adetails\x18\x02 \x01(\v2\x19.matchmaking.MatchDetailsH\x00R\adetails\x88\x01\x01\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"m\n" +
	"\x06Status\x12\x16\n" +
	"\x12STATUS_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12WAITING_FOR_PLAYER\x10\x01\x12\x0f\n" +
	"\vMATCH_FOUND\x10\x02\x12\x11\n" +
	"\rQUEUE_TIMEOUT\x10\x03\x12\x0f\n" +
	"\vQUEUE_ERROR\x10\x04B\n" +
	"\n" +
	"\b_details\"\x97\x01\n" +
	"\fMatchDetails\x12\x19\n" +
	"\bmatch_id\x18\x01 \x01(\tR\amatchId\x12\x1d\n" +
	"\n" +
	"player1_id\x18\x02 \x01(\tR\tplayer1Id\x12\x1d\n" +
	"\n" +
	"player2_id\x18\x03 \x01(\tR\tplayer2Id\x12.\n" +
	"\x13game_server_address\x18\x04 \x01(\tR\x11gameServerAddress\"/\n" +
	"\x10JoinQueueRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\"0\n" +
	"\x11LeaveQueueRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId2\xa2\x01\n" +
	"\x12MatchmakingService\x12F\n" +
	"\tJoinQueue\x12\x1d.matchmaking.JoinQueueRequest\x1a\x18.matchmaking.QueueUpdate0\x01\x12D\n" +
	"\n" +
	"LeaveQueue\x12\x1e.matchmaking.LeaveQueueRequest\x1a\x16.google.protobuf.EmptyBGZEgithub.com/Irishsmurf/pongolang/api/gen/go/matchmaking;matchmaking_pbb\x06proto3"

var (
	file_matchmaking_matchmaking_proto_rawDescOnce sync.Once
	file_matchmaking_matchmaking_proto_rawDescData []byte
)

func file_matchmaking_matchmaking_proto_rawDescGZIP() []byte {
	file_matchmaking_matchmaking_proto_rawDescOnce.Do(func() {
		file_matchmaking_matchmaking_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_matchmaking_matchmaking_proto_rawDesc), len(file_matchmaking_matchmaking_proto_rawDesc)))
	})
	return file_matchmaking_matchmaking_proto_rawDescData
}

var file_matchmaking_matchmaking_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_matchmaking_matchmaking_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_matchmaking_matchmaking_proto_goTypes = []any{
	(QueueUpdate_Status)(0),   // 0: matchmaking.QueueUpdate.Status
	(*QueueUpdate)(nil),       // 1: matchmaking.QueueUpdate
	(*MatchDetails)(nil),      // 2: matchmaking.MatchDetails
	(*JoinQueueRequest)(nil),  // 3: matchmaking.JoinQueueRequest
	(*LeaveQueueRequest)(nil), // 4: matchmaking.LeaveQueueRequest
	(*emptypb.Empty)(nil),     // 5: google.protobuf.Empty
}
var file_matchmaking_matchmaking_proto_depIdxs = []int32{
	0, // 0: matchmaking.QueueUpdate.status:type_name -> matchmaking.QueueUpdate.Status
	2, // 1: matchmaking.QueueUpdate.details:type_name -> matchmaking.MatchDetails
	3, // 2: matchmaking.MatchmakingService.JoinQueue:input_type -> matchmaking.JoinQueueRequest
	4, // 3: matchmaking.MatchmakingService.LeaveQueue:input_type -> matchmaking.LeaveQueueRequest
	1, // 4: matchmaking.MatchmakingService.JoinQueue:output_type -> matchmaking.QueueUpdate
	5, // 5: matchmaking.MatchmakingService.LeaveQueue:output_type -> google.protobuf.Empty
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_matchmaking_matchmaking_proto_init() }
func file_matchmaking_matchmaking_proto_init() {
	if File_matchmaking_matchmaking_proto != nil {
		return
	}
	file_matchmaking_matchmaking_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_matchmaking_matchmaking_proto_rawDesc), len(file_matchmaking_matchmaking_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_matchmaking_matchmaking_proto_goTypes,
		DependencyIndexes: file_matchmaking_matchmaking_proto_depIdxs,
		EnumInfos:         file_matchmaking_matchmaking_proto_enumTypes,
		MessageInfos:      file_matchmaking_matchmaking_proto_msgTypes,
	}.Build()
	File_matchmaking_matchmaking_proto = out.File
	file_matchmaking_matchmaking_proto_goTypes = nil
	file_matchmaking_matchmaking_proto_depIdxs = nil
}
